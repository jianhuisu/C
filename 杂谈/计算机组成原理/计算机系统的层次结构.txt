
计算机系统的层次结构

两级层次结构

    M2 汇编语言机器-虚拟机       助记符 汇编语言通用性低，每台机器都必须有一种与之对应的汇编语言  不利于推广
    M1 机器语言机器-实际机器

三级层次结构

    M3   高级编程语言机器-虚拟机       (面向问题的语言) 例如 FORTRAN BASIC PASCAL C 等，使用习惯复合人类，较强的通用性
    M2   汇编语言机器-虚拟机
    M1   机器语言机器-实际机器

高级编程语言执行过程(分为两种):

    M3 --> M1            高级编程语言直接翻译为机器语言执行
    M3 -> M2 -> M1       高级语言先翻译为 汇编语言，然后由汇编语言翻译为机器语言

翻译程序(将高级语言翻译为机器语言的程序称为翻译程序，大致分为两类)

    编译程序     将源码一次性翻译为机器语言，源码不变，无需重新翻译
    解释程序     将源码中的一条语句 翻译为一条指令，然后立即执行，如此反复直至源码全部翻译完成，即【翻译一条，执行一条，重复执行，重复翻译】

四级层次结构

    M3   高级编程语言机器-虚拟机
    M2   汇编语言机器-虚拟机
    M1   机器语言机器-实际机器
    M0   微程序机器-实际机器       将机器指令拆分为微程序指令[微指令系统]

五级层次结构(注意这里插入了一层 原有位置部分发生改变)

    M4  高级编程语言虚拟机
    M3  汇编语言虚拟机
    M2  操作系统虚拟机
    M1  机器指令
    M0  微程序机器

五级层次机构还可以向上延伸出 M5 面向应语言的虚拟机，比如 php、python ...



